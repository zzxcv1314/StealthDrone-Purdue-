syntax = "proto3";

package dronecode_sdk.rpc.action;

option java_package = "io.dronecode_sdk.action";
option java_outer_classname = "ActionProto";

service ActionService {
    rpc Arm(ArmRequest) returns(ArmResponse) {}
    rpc Disarm(DisarmRequest) returns(DisarmResponse) {}
    rpc Takeoff(TakeoffRequest) returns(TakeoffResponse) {}
    rpc Land(LandRequest) returns(LandResponse) {}
    rpc Kill(KillRequest) returns(KillResponse) {}
    rpc ReturnToLaunch(ReturnToLaunchRequest) returns(ReturnToLaunchResponse) {}
    rpc TransitionToFixedWing(TransitionToFixedWingRequest) returns(TransitionToFixedWingResponse) {}
    rpc TransitionToMulticopter(TransitionToMulticopterRequest) returns(TransitionToMulticopterResponse) {}
    rpc GetTakeoffAltitude(GetTakeoffAltitudeRequest) returns(GetTakeoffAltitudeResponse) {}
    rpc SetTakeoffAltitude(SetTakeoffAltitudeRequest) returns(SetTakeoffAltitudeResponse) {}
    rpc GetMaximumSpeed(GetMaximumSpeedRequest) returns(GetMaximumSpeedResponse) {}
    rpc SetMaximumSpeed(SetMaximumSpeedRequest) returns(SetMaximumSpeedResponse) {}
    rpc GetReturnToLaunchAltitude(GetReturnToLaunchAltitudeRequest) returns(GetReturnToLaunchAltitudeResponse) {}
    rpc SetReturnToLaunchAltitude(SetReturnToLaunchAltitudeRequest) returns(SetReturnToLaunchAltitudeResponse) {}
}

message ArmRequest {}
message ArmResponse {
    ActionResult action_result = 1;
}

message DisarmRequest {}
message DisarmResponse {
    ActionResult action_result = 1;
}

message TakeoffRequest {}
message TakeoffResponse {
    ActionResult action_result = 1;
}

message LandRequest {}
message LandResponse {
    ActionResult action_result = 1;
}

message KillRequest {}
message KillResponse {
    ActionResult action_result = 1;
}

message ReturnToLaunchRequest {}
message ReturnToLaunchResponse {
    ActionResult action_result = 1;
}

message TransitionToFixedWingRequest {}
message TransitionToFixedWingResponse {
    ActionResult action_result = 1;
}

message TransitionToMulticopterRequest {}
message TransitionToMulticopterResponse {
    ActionResult action_result = 1;
}

message GetTakeoffAltitudeRequest {}
message GetTakeoffAltitudeResponse {
    ActionResult action_result = 1;
    float altitude = 2;
}

message SetTakeoffAltitudeRequest {
    float altitude = 1;
}
message SetTakeoffAltitudeResponse {
    ActionResult action_result = 1;
}

message GetMaximumSpeedRequest {}
message GetMaximumSpeedResponse {
    ActionResult action_result = 1;
    float speed = 2;
}

message SetMaximumSpeedRequest {
    float speed = 1;
}
message SetMaximumSpeedResponse {
    ActionResult action_result = 1;
}

message GetReturnToLaunchAltitudeRequest {}
message GetReturnToLaunchAltitudeResponse {
    ActionResult action_result = 1;
    float relative_altitude_m = 2;
}

message SetReturnToLaunchAltitudeRequest {
    float relative_altitude_m = 1;
}
message SetReturnToLaunchAltitudeResponse {
    ActionResult action_result = 1;
}

message ActionResult {
    enum Result {
        UNKNOWN = 0;
        SUCCESS = 1;
        NO_SYSTEM = 2;
        CONNECTION_ERROR = 3;
        BUSY = 4;
        COMMAND_DENIED = 5;
        COMMAND_DENIED_LANDED_STATE_UNKNOWN = 6;
        COMMAND_DENIED_NOT_LANDED = 7;
        TIMEOUT = 8;
        VTOL_TRANSITION_SUPPORT_UNKNOWN = 9;
        NO_VTOL_TRANSITION_SUPPORT = 10;
        PARAMETER_ERROR = 11;
    }

    Result result = 1;
    string result_str = 2;
}
